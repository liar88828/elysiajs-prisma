// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model UserDB {
  id       Int    @id @default(autoincrement())
  name     String
  age      Int
  address  String
  email    String @unique
  password String

  refreshTokens String
  otp           Int             @default(0)
  active        Boolean         @default(false)
  valid         Boolean         @default(false)
  role          String          @default("USER")
  Post          PostDB[]
  Transaction   TransactionDB[]
  Product       ProductDB[]
}

model ProductDB {
  id          Int             @id @default(autoincrement())
  name        String
  price       Int
  qty         Int
  exp         DateTime        @default(now())
  User        UserDB?         @relation(fields: [userId], references: [id])
  userId      Int?
  create      DateTime        @default(now())
  comment     PostDB[]
  Transaction TransactionDB[]
}

model TransactionDB {
  id          Int      @id @default(autoincrement())
  description String
  qty         Int
  total       Int
  create      DateTime @default(now())

  status    StatusDB   @relation(fields: [statusId], references: [id])
  statusId  String
  user      UserDB?    @relation(fields: [userId], references: [id])
  userId    Int?
  Product   ProductDB? @relation(fields: [productId], references: [id])
  productId Int?
}

// model RefreshToken {
//   id          String   @id @unique @default(uuid())
//   hashedToken String
//   userId      Int
//   User        UserDB   @relation(fields: [userId], references: [id], onDelete: Cascade)
//   revoked     Boolean  @default(false)
//   createdAt   DateTime @default(now())
// }

model StatusDB {
  id          String          @id @default("PENDING")
  Transaction TransactionDB[]
}

model PostDB {
  id          Int        @id @default(autoincrement())
  title       String
  msg         String
  rating      Int        @default(0)
  UserDB      UserDB?    @relation(fields: [userId], references: [id])
  userId      Int?
  ProductDB   ProductDB? @relation(fields: [productDBId], references: [id])
  productDBId Int?
}
